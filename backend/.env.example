# Environment Configuration
NODE_ENV=development
PORT=5001

# Database Configuration
# For local development, use MongoDB locally or MongoDB Atlas
MONGO_URI=mongodb://localhost:27017/private-gpt-chat
# For production, use MongoDB Atlas:
# MONGO_URI=mongodb+srv://username:password@cluster.mongodb.net/private-gpt-chat

# JWT Configuration
# Generate secure random strings for production (minimum 64 characters)
# You can use: openssl rand -hex 32
JWT_SECRET=your_super_secret_jwt_key_here_make_it_long_and_secure_2024
JWT_REFRESH_SECRET=your_super_secret_refresh_jwt_key_here_make_it_long_and_secure_2024

# OpenRouter API Configuration
# Get your API key from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENAI_API_BASE_URL=https://openrouter.ai/api/v1

# Client Configuration
CLIENT_URL=http://localhost:3000
FRONTEND_URL=http://localhost:3000

# Google OAuth Configuration
# Get credentials from: https://console.cloud.google.com/
# Set authorized redirect URIs to: http://localhost:5001/api/auth/google/callback (development)
# For production, add your production domain callback URL
GOOGLE_CLIENT_ID=your-google-client-id-here.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret-here
SESSION_SECRET=your-session-secret-here-make-it-long-and-complex

# Instructions:
# 1. Replace all "your-*-here" values with actual credentials
# 2. Generate strong secrets using: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# 3. For Google OAuth setup, visit Google Cloud Console and create OAuth 2.0 credentials
# 4. Enable Google+ API and Google People API in your Google Cloud project
